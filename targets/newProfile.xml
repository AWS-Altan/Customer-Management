<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TargetEndpoint name="newProfile">
    <Description/>
    <FaultRules>
        <FaultRule name="ControlledError1">
            <Condition>(fault.name = "RaiseFault")</Condition>
            <Step>
                <Condition>(error.header.FaultHeader = "QuerySubsInfoError")</Condition>
                <Name>AM-ErrorQuerySubsInfo</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "QuerySubStatusError")</Condition>
                <Name>AM-ErrorMessageQuerySubStatus</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "PredeactivateError")</Condition>
                <Name>AM-ErrorMessagePredeactivate</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ValidateHSSError")</Condition>
                <Name>AM-ErrorMessageValidateHSS</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ReactivateSubError")</Condition>
                <Name>AM-ErrorMessageReactivateSub</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ReportLostError")</Condition>
                <Name>AM-ErrorMessageReportLost</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "TargetError")</Condition>
                <Name>AM-ErrorMessageTargetError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "CancelReportLostError")</Condition>
                <Name>AM-ErrorMessageCancelReportLost</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "QueryFreeUnitError")</Condition>
                <Name>AM-ErrorMessageQueryFreeUnit</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "QueryPurchasedPrimaryOfferingError")</Condition>
                <Name>AM-ErrorMessageQueryPurchasedPrimaryOfferingError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ActivateSubscriberError")</Condition>
                <Name>AM-ErrorMessageActivateSubscriberError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "QueryEntityIdsError")</Condition>
                <Name>AM-ErrorMessageQueryEntityIdsError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "PrepaidToPostpaidError")</Condition>
                <Name>AM-ErrorMessagePrepaidToPostpaidError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ValidateCoverageError")</Condition>
                <Name>AM-ErrorMessageValidateCoverageError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ChangeSupplementaryOfferingError")</Condition>
                <Name>AM-ErrorMessageChangeSupplementaryOfferingError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "QuerySupplementaryOfferingError")</Condition>
                <Name>AM-ErrorMessageQuerySupplementaryOfferingError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ValidatorError")</Condition>
                <Name>AM-ErrorMessageValidatorError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ChangePrimaryOfferingError")</Condition>
                <Name>AM-ErrorMessageChangePrimaryOfferingDefault</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ChangeSubscriberStatusError")</Condition>
                <Name>AM-ErrorMessageChangeSubscriberStatus</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ValidateQueryFreeUnit")</Condition>
                <Name>AM-ErrorMessageValidateQueryFreeUnit</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "QueryFreeUnitPurchaseError")</Condition>
                <Name>AM-ErrorMessageQueryFreeUnitPurchase</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "OfferingIdError")</Condition>
                <Name>AM-ErrorMessageOffering</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ValidateCodeSubstatusError")</Condition>
                <Name>AM-ErrorMessageValidateCodeSubstatus</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "QueryOrderStatusError")</Condition>
                <Name>AM-ErrorMessageQueryOrderStatus</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ServiceabilityError")</Condition>
                <Name>EV-ErrorMessageServiceability</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ServiceabilityError")</Condition>
                <Name>AM-ErrorMessageServiceability</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "VerifyDateErrorPatch") OR (error.header.FaultHeader = "VerifyDateError")</Condition>
                <Name>AM-ErrorMessageVerifyDate</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "DeactivateError")</Condition>
                <Name>AM-ErrorMessageDeactivate</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "UnsupportedOperation")</Condition>
                <Name>AM-ErrorUnsupportedOperation</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ScheduleDateNull")</Condition>
                <Name>AM-ErrorMessageScheduleDateNull</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "MobilityOfferError")</Condition>
                <Name>AM-ErrorMessageMobilityOffer</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "AWSError")</Condition>
                <Name>AM-ErrorMessageAWSResponse</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ValidateLocalApps")</Condition>
                <Name>AM-ErrorMessageValidateLocalApps</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "GetImeiHssError")</Condition>
                <Name>AM-ErrorMessageGetImeiHss</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ValidateError204")</Condition>
                <Name>AM-ErrorMesaggeValidate204</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "TargetError")</Condition>
                <Name>AM-ErrorMessageDefaultServer</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "InvalidProductError")</Condition>
                <Name>AM-ErrorMessageInvalidProductError</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "PredeactivateStatus")</Condition>
                <Name>AM-ErrorMessageQuerySubStatus</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ChangeSuppError")</Condition>
                <Name>AM-ErrorMessagePurchase</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "InValidResponseResumeError")</Condition>
                <Name>AM-ErrorMessageDefaultServer</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "IsInvalidAddressError")</Condition>
                <Name>AM-ErrorMessageIsInvalidArea</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "Band28Error")</Condition>
                <Name>AM-ErrorMessageUnbarringBand28</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ProfileMSError")</Condition>
                <Name>AM-ErrorMessageDefaultServer</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ProfleMSErrorAuth")</Condition>
                <Name>AM-ErrorMessageProfleMSAuth</Name>
            </Step>
            <Step>
                <Condition>(error.header.FaultHeader = "ProfileMSErrorSubscriber")</Condition>
                <Name>AM-ErrorMessageProfileMSSubscriber</Name>
            </Step>
        </FaultRule>
        <FaultRule name="SpikeArrestErrors">
            <Step>
                <Name>AM-LimitCounting</Name>
                <Condition>(fault.name Matches "SpikeArrestViolation") </Condition>
            </Step>
        </FaultRule>
    </FaultRules>
    <DefaultFaultRule name="allErrors">
        <AlwaysEnforce>true</AlwaysEnforce>
        <Step>
            <Condition>(errorMessage.code = null)</Condition>
            <Name>AM-ErrorMessageDefaultServer</Name>
        </Step>
        <Step>
            <Condition>(errorMessage.detail != null)</Condition>
            <Name>AM-ErrorMessageResponseDetail</Name>
        </Step>
        <Step>
            <Condition>(errorMessage.detail = null)</Condition>
            <Name>AM-ErrorMessageResponse</Name>
        </Step>
    </DefaultFaultRule>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>JS-EmptyTPS</Name>
            </Step>
            <Step>
                <Name>SA-LimitCountingNewProfile</Name>
            </Step>
            <Step>
                <Name>SA-LimitCountingCompany</Name>
            </Step>
            <Step>
                <Name>EV-Request</Name>
            </Step>
        </Request>
        <Response>
            <Step>
                <Name>AM-AssignResponseVerb</Name>
            </Step>
        </Response>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request>
            <Step>
                <Name>AM-SetTargetURLNewProfile</Name>
            </Step>
        </Request>
        <Response/>
    </PostFlow>
    <Flows>
        <Flow name="profile">
            <Description/>
            <Request>
                <Step>
                    <Name>FC-GenerateSubtransactionId</Name>
                </Step>
                <Step>
                    <Name>JS-RecoverTransactionId</Name>
                </Step>
                <Step>
                    <Name>AM-BuildRequestMSProfile</Name>
                </Step>
                <Step>
                    <Name>Am-SetAuditorDataInMsProfile</Name>
                </Step>
                <Step>
                    <Name>FC-AuditorService</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>JS-ValidateReponseProfileMS</Name>
                </Step>
                <Step>
                    <Name>AM-SetAuditorDataOutMsProfile</Name>
                </Step>
                <Step>
                    <Name>FC-AuditorService</Name>
                </Step>
                <Step>
                    <Name>RF-ProfileMS</Name>
                    <Condition>statusCodeProfileMS == "500"</Condition>
                </Step>
                <Step>
                    <Name>RF-ProfleMSErrorAuth</Name>
                    <Condition>statusCodeProfileMS == "400" and errorTextProfileMS == "The authentication returns failure"</Condition>
                </Step>
                <Step>
                    <Name>RF-ProfileMSErrorSubscriber</Name>
                    <Condition>statusCodeProfileMS == "400" and errorTextProfileMS == "The suscriber does not exist"</Condition>
                </Step>
                <Step>
                    <Name>EV-GetProfileMS</Name>
                </Step>
                <Step>
                    <Name>FC-ProfileAssemble</Name>
                </Step>
                <Step>
                    <Name>AM-ResponseProfileMSVersion1</Name>
                    <Condition>profileVersion != "2"</Condition>
                </Step>
                <Step>
                    <Name>AM-ResponseProfileMSVersion2</Name>
                    <Condition>profileVersion == "2"</Condition>
                </Step>
                <Step>
                    <Name>FC-GetResponseContentProfile</Name>
                    <Condition>(hasProfileCatching = "true")</Condition>
                </Step>
                <Step>
                    <Name>FC-InsertProfileCatching</Name>
                    <Condition>(hasProfileCatching = "true")</Condition>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/subscribers/{msisdn}/profile") and (request.verb = "GET")</Condition>
        </Flow>
    </Flows>
    <HTTPTargetConnection>
        <LoadBalancer>
            <Server name="MS-PROFILE"/>
        </LoadBalancer>
        <Path>/{profile.operationPath}</Path>
        <!--<URL>http://52.201.65.241:8180/{profile.operationPath}</URL>-->
        <Properties>
            <Property name="success.codes">1xx,2xx,3xx,4xx,5xx</Property>
        </Properties>
    </HTTPTargetConnection>
</TargetEndpoint>